basePath: /api
consumes:
    - application/json
definitions:
    BaseModel:
        properties:
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            id:
                format: uint64
                type: integer
                x-go-name: ID
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    Category:
        description: Category to relate receipts to
        properties:
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            id:
                format: uint64
                type: integer
                x-go-name: ID
            name:
                description: |-
                    Name of the category

                    required: ture
                type: string
                x-go-name: Name
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    Comment:
        description: User comment left on receipts
        properties:
            additionalInfo:
                description: Additional information about the comment
                type: string
                x-go-name: AdditionalInfo
            comment:
                description: Comment itself
                type: string
                x-go-name: Comment
            commentId:
                description: Comment foreign key used for repleis
                format: uint64
                type: integer
                x-go-name: CommentId
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            id:
                format: uint64
                type: integer
                x-go-name: ID
            receiptId:
                description: Receipt foreign key
                format: uint64
                type: integer
                x-go-name: ReceiptId
            replies:
                description: Comment's replies
                items:
                    $ref: '#/definitions/Comment'
                type: array
                x-go-name: Replies
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            userId:
                description: User foreign key
                format: uint64
                type: integer
                x-go-name: UserId
        required:
            - comment
            - receiptId
            - userId
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    FileData:
        description: File data for images on a receipt
        properties:
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            fileType:
                description: MIME file type
                type: string
                x-go-name: FileType
            id:
                format: uint64
                type: integer
                x-go-name: ID
            imageData:
                description: Image data
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: ImageData
            name:
                description: File name
                type: string
                x-go-name: Name
            receiptId:
                description: Receipt foreign key
                format: uint64
                type: integer
                x-go-name: ReceiptId
            size:
                description: File size
                format: uint64
                type: integer
                x-go-name: Size
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        required:
            - imageData
            - receiptId
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    Group:
        description: Group in the system
        properties:
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            groupMembers:
                description: Members of the group
                items:
                    $ref: '#/definitions/GroupMember'
                type: array
                x-go-name: GroupMembers
            id:
                format: uint64
                type: integer
                x-go-name: ID
            isDefault:
                description: Is default group (not used yet)
                type: boolean
                x-go-name: IsDefaultGroup
            name:
                description: Name of the group
                type: string
                x-go-name: Name
            status:
                $ref: '#/definitions/GroupStatus'
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        required:
            - name
            - status
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    GroupMember:
        description: Group member
        properties:
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            groupId:
                description: Group compound primary key
                format: uint64
                type: integer
                x-go-name: GroupID
            groupRole:
                $ref: '#/definitions/GroupRole'
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            userId:
                description: User compound primary key
                format: uint64
                type: integer
                x-go-name: UserID
        required:
            - userId
            - groupId
            - groupRole
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    GroupRole:
        type: string
        x-go-package: receipt-wrangler/api/internal/models
    GroupStatus:
        type: string
        x-go-package: receipt-wrangler/api/internal/models
    Item:
        description: Itemized item on a receipt
        properties:
            IsTaxed:
                description: Is taxed (not used)
                type: boolean
            amount:
                description: Amount the item costs
                type: string
                x-go-name: Amount
            chargedToUserId:
                description: User foreign key
                format: uint64
                type: integer
                x-go-name: ChargedToUserId
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            id:
                format: uint64
                type: integer
                x-go-name: ID
            name:
                description: Item name
                type: string
                x-go-name: Name
            receiptId:
                description: Receipt foreign key
                format: uint64
                type: integer
                x-go-name: ReceiptId
            status:
                $ref: '#/definitions/ItemStatus'
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        required:
            - amount
            - chargedToUserId
            - name
            - receiptId
            - status
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    ItemStatus:
        type: string
        x-go-package: receipt-wrangler/api/internal/models
    Notification:
        description: Notification
        properties:
            body:
                description: |-
                    Notification body

                    requried: true
                type: string
                x-go-name: Body
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            id:
                format: uint64
                type: integer
                x-go-name: ID
            title:
                description: Title
                type: string
                x-go-name: Title
            type:
                $ref: '#/definitions/NotificationType'
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            userId:
                description: User foreign key
                format: uint64
                type: integer
                x-go-name: UserId
        required:
            - type
            - title
            - userId
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    NotificationType:
        type: string
        x-go-package: receipt-wrangler/api/internal/models
    Receipt:
        description: Receipt
        properties:
            amount:
                description: Reciept total amount
                type: string
                x-go-name: Amount
            categories:
                description: Categories associated to receipt
                items:
                    $ref: '#/definitions/Category'
                type: array
                x-go-name: Categories
            comments:
                description: Comments associated to receipt
                items:
                    $ref: '#/definitions/Comment'
                type: array
                x-go-name: Comments
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            date:
                description: Receipt date
                format: date-time
                type: string
                x-go-name: Date
            groupId:
                description: Group foreign key
                format: uint64
                type: integer
                x-go-name: GroupId
            id:
                format: uint64
                type: integer
                x-go-name: ID
            imageFiles:
                description: Files associated to receipt
                items:
                    $ref: '#/definitions/FileData'
                type: array
                x-go-name: ImageFiles
            name:
                description: Receipt name
                type: string
                x-go-name: Name
            paidByUserId:
                description: User paid foreign key
                format: uint64
                type: integer
                x-go-name: PaidByUserID
            receiptItems:
                description: Items associated to receipt
                items:
                    $ref: '#/definitions/Item'
                type: array
                x-go-name: ReceiptItems
            resolvedDate:
                description: Date resolved
                format: date-time
                type: string
                x-go-name: ResolvedDate
            status:
                $ref: '#/definitions/ReceiptStatus'
            tags:
                description: Tags associated to receipt
                items:
                    $ref: '#/definitions/Tag'
                type: array
                x-go-name: Tags
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        required:
            - name
            - amount
            - date
            - paidByUserId
            - groupId
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    ReceiptStatus:
        type: string
        x-go-package: receipt-wrangler/api/internal/models
    Tag:
        description: Tag to relate receipts to
        properties:
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            id:
                format: uint64
                type: integer
                x-go-name: ID
            name:
                description: Tag name
                type: string
                x-go-name: Name
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        required:
            - name
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    User:
        description: User in the system
        properties:
            Password:
                description: |-
                    User's password

                    required true
                type: string
            Username:
                description: User's username used to login
                type: string
            createdAt:
                format: date-time
                type: string
                x-go-name: CreatedAt
            createdBy:
                format: uint64
                type: integer
                x-go-name: CreatedBy
            defaultAvatarColor:
                description: Default avatar color
                type: string
                x-go-name: DefaultAvatarColor
            displayName:
                description: Display name
                type: string
                x-go-name: DisplayName
            id:
                format: uint64
                type: integer
                x-go-name: ID
            isDummyUser:
                description: Is dummy user
                type: boolean
                x-go-name: IsDummyUser
            updatedAt:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            userRole:
                $ref: '#/definitions/UserRole'
        required:
            - displayName
            - isDummyUser
            - Username
            - userRole
        type: object
        x-go-package: receipt-wrangler/api/internal/models
    UserRole:
        type: string
        x-go-package: receipt-wrangler/api/internal/models
info:
    license:
        name: GPLV3
        url: https://www.gnu.org/licenses/gpl-3.0.en.html
    termsOfService: there are no TOS at this moment, use at your own risk we take no responsibility
    title: Receipt Wrangler API.
    version: 0.0.1
paths:
    /category/:
        get:
            description: This will return all categories in the system
            operationId: category
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get all categories
            tags:
                - Category
    /groups/:
        get:
            description: This will get groups for the currently logged in user
            operationId: group
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get groups for user
            tags:
                - Groups
        post:
            consumes:
                - application/json
            description: This will create a group
            operationId: group
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Create group
            tags:
                - Groups
    /groups/{groupId}:
        delete:
            description: This will delete a group by id
            operationId: group
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Delete group
            tags:
                - Groups
        get:
            description: This will get a group by Id
            operationId: group
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Gets a group by Id
            tags:
                - Groups
        put:
            consumes:
                - application/json
            description: This will update a group
            operationId: group
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Update a group
            tags:
                - Groups
    /notifications/:
        delete:
            description: This deletes all notifications for a user
            operationId: notificationCount
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Delete all notifications for user
            tags:
                - Notifications
        get:
            consumes:
                - application/json
            description: This will get all the notifications for the currently logged in user
            operationId: listNotifications
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get all user notifications
            tags:
                - Notifications
    /notifications/{id}:
        delete:
            description: This deletes a notification by id
            operationId: notificationCount
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Delete notification by id
            tags:
                - Notifications
    /notifications/notificationCount:
        get:
            description: This will get the notification count for the currently logged in user
            operationId: notificationCount
            produces:
                - text/plain
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Notification count
            tags:
                - Notifications
    /search/:
        get:
            consumes:
                - text/plain
            description: This will search for receipts based on a search term
            operationId: search
            parameters:
                - description: search term
                  in: query
                  name: searchTerm
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Receipt Search
            tags:
                - Search
    /tag/:
        get:
            description: This will return all tags in the system
            operationId: tag
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get all tags
            tags:
                - Tag
    /users/:
        get:
            description: This will get all the users in the system and return a view without sensative information
            operationId: user
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get users
            tags:
                - User
        post:
            consumes:
                - application/json
            description: This will to create a user, [SYSTEM ADMIN]
            operationId: user
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Create user
            tags:
                - User
    /users/{id}:
        delete:
            description: This will delete a system user by id [SYSTEM ADMIN]
            operationId: user
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Delete user
            tags:
                - User
        put:
            consumes:
                - application/json
            description: This will update a user by id, [SYSTEM ADMIN]
            operationId: user
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Update user by id
            tags:
                - User
    /users/{id}/convertDummyUserToNormalUser:
        post:
            description: This will convert a dummy user to a normal system user, [SYSTEM ADMIN]
            operationId: user
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Converts dummy user
            tags:
                - User
    /users/{id}/resetPassword:
        put:
            consumes:
                - application/json
            description: This will reset a password for a user, [SYSTEM ADMIN]
            operationId: user
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Reset password
            tags:
                - User
    /users/{username}:
        get:
            consumes:
                - text/plain
            description: This will return the number of users in the system with the same username
            operationId: user
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get username count
            tags:
                - User
    /users/amountOwedForUser/{groupId}:
        get:
            description: This will return the amount owed for the logged in user, in the specified group, [SYSTEM USER]
            operationId: user
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get amount owed for user
            tags:
                - User
    /users/getUserClaims:
        get:
            description: This will return the user's token claims for the currently logged in user [SYSTEM USER]
            operationId: user
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Get claims for logged in user
            tags:
                - User
    /users/updateUserProfile:
        put:
            consumes:
                - application/json
            description: This will update the logged in user's user profile
            operationId: user
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/Ok'
                "500":
                    $ref: '#/responses/Internal'
                    description: Server Error
            schemes:
                - https
            security:
                - api_key: []
            summary: Update user profile
            tags:
                - User
produces:
    - application/json
schemes:
    - https
security:
    - api_key: []
securityDefinitions:
    api_key:
        in: header
        name: jwt
        type: string
swagger: "2.0"
